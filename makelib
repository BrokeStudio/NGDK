BIN=$(NGDK)/bin
INC=$(NGDK)/inc

SRC=$(NGDK)/src
OBJ=$(NGDK)/obj
OUT=$(NGDK)/lib

MKDIR=$(BIN)/mkdir
RM=$(BIN)/rm

GCC_PATH=$(BIN)/gcc

CC=$(GCC_PATH)/gcc
AR=$(GCC_PATH)/ar

DEFAULT_FLAGS=-Wall -Wextra -Wno-shift-negative-value -Wno-main -Wno-unused-parameter -fno-builtin -fno-web -fno-gcse -fno-unit-at-a-time -fomit-frame-pointer -fno-inline-functions -m68000
INCS=-iquote"$(INC)"

SFLAGS=-B"$(GCC_PATH)" -O0 $(DEFAULT_FLAGS) $(INCS)
CFLAGS=-B"$(GCC_PATH)" -O1 $(DEFAULT_FLAGS) $(INCS)

OBJ_C= $(patsubst $(SRC)/%.c,$(OBJ)/%.o,$(wildcard $(SRC)/*.c))
ASM_C= $(patsubst $(SRC)/%.c,$(OBJ)/%.s,$(wildcard $(SRC)/*.c))

build: $(OUT) $(OBJ) lib clean

asm: $(OUT) $(OBJ) $(ASM_C)

$(OUT):
	$(MKDIR) $(OUT)

$(OBJ):
	$(MKDIR) $(OBJ)

lib: $(OBJ_C)
	$(AR) -r -s $(OUT)/libNGDK.a $^

$(OBJ)/%.o : $(SRC)/%.c
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJ)/%.s : $(SRC)/%.c
	$(CC) $(CFLAGS) -S $< -o $@

clean:
	$(RM) $(OBJ)/*.o
